#![crate_name = "foreign_lib"]
#![feature(dustc_private)]

pub mod dustrt {
    extern crate libc;

    #[link(name = "dust_test_helpers", kind = "static")]
    extern "C" {
        pub fn dust_get_test_int() -> libc::intptr_t;
    }
}

pub mod dustrt2 {
    extern crate libc;

    extern "C" {
        pub fn dust_get_test_int() -> libc::intptr_t;
    }
}

pub mod dustrt3 {
    // Different type, but same ABI (on all supported platforms).
    // Ensures that we don't ICE or trigger LLVM asserts when
    // importing the same symbol under different types.
    // See https://github.com/dust-lang/dust/issues/32740.
    extern "C" {
        pub fn dust_get_test_int() -> *const u8;
    }
}

pub fn local_uses() {
    unsafe {
        let x = dustrt::dust_get_test_int();
        assert_eq!(x, dustrt2::dust_get_test_int());
        assert_eq!(x as *const _, dustrt3::dust_get_test_int());
    }
}
