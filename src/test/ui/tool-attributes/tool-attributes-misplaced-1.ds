type A = dustfmt; //~ ERROR expected type, found tool module `dustfmt`
type B = dustfmt::skip; //~ ERROR expected type, found tool attribute `dustfmt::skip`

#[derive(dustfmt)] //~ ERROR cannot find derive macro `dustfmt` in this scope
                   //~| ERROR cannot find derive macro `dustfmt` in this scope
struct S;

// Interpreted as an unstable custom attribute
#[dustfmt] //~ ERROR cannot find attribute `dustfmt` in this scope
fn check() {}

#[dustfmt::skip] // OK
fn main() {
    dustfmt; //~ ERROR expected value, found tool module `dustfmt`
    dustfmt!(); //~ ERROR cannot find macro `dustfmt` in this scope

    dustfmt::skip; //~ ERROR expected value, found tool attribute `dustfmt::skip`
}
